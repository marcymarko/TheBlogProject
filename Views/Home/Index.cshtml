@using TheBlogProject.Models
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<Blog>
<<<<<<< HEAD
<<<<<<< HEAD

    <div class="row">

        @foreach (var blog in Model)
        {
            <div class="col-sm-12ccol-md-6 col-lg-4 mt-2">
                <div class="card border-dark">
                    <img class="card-img-top" src="@_imageService.DecodeImage(blog.ImageData, blog.ContentType)"/>
                    <div class="card-body text-center">

                        <div class="bg-warning">
                            <hr class="card-hr" />
                            <h5 class="card-title">@blog.Name</h5>
                            <hr class="card-hr"/>
                        </div>
                        <div>
                            <p class="card-text cftooltip"
                                data-toggle="tooltip"
                                data-placement="top"
                                title=""
                                data-oroginal-title="@blog.Description">@blog.Description</p>
                        </div>

                        <br />
                        <div class="text-center">
                            <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id">
                                Read Posts
                            </a>
                        </div>

                        @if (User.IsInRole(BlogRole.Administrator.ToString()))
                        {
                            <div class="text-center">
                                <a class="btn btn-dark btn-sm note-btn-block mb-2" asp-action="Create" asp-controller="Posts" asp-route-id="@blog.Id">Create Post</a>
                            </div>
                        }

                        @if (User.IsInRole(BlogRole.Administrator.ToString()))
                        {
                            <div class="text-center">
                                <a class="btn btn-dark btn-sm note-btn-block mb-2" asp-action="Edit" asp-controller="Blogs" asp-route-id="@blog.Id"></a>
                            </div>
                        }


=======
=======
>>>>>>> parent of b0dc755 (committe)
@{
    ViewData["Title"] = "Home Page";
}

         <div class="container px-4 px-lg-5">
            <div class="row gx-4 gx-lg-5 justify-content-center">
                <div class="col-md-10 col-lg-8 col-xl-7">
                    @foreach (var blog in Model)
                    {
                        <div class="post-preview">
                        <a asp-controller="Posts" asp-action="BlogPostIndex" asp-route-id="@blog.Id">
                            <h2 class="post-title">
                                @blog.Name
                            </h2>
                            <h3 class="post-subtitle">
                                @blog.Description
                            </h3>
                        </a>
                        <p class="post-meta">
                            Posted by
                            <a href="#!">@blog.BlogUser.FullName</a>
                            on @blog.Created.ToString("MMM dd, yyyy")
                        </p>
<<<<<<< HEAD
>>>>>>> parent of b0dc755 (committe)
=======
>>>>>>> parent of b0dc755 (committe)
                    </div>
                    <!-- Divider-->
                    <hr class="my-4" />
                    }

                    
                    
                    <!-- Pager-->
                    <div class="d-flex justify-content-end mb-4"><a class="btn btn-primary text-uppercase" href="#!">Older Posts →</a></div>
                </div>
            </div>
        </div>

        <!-- Add Paging controls here -->

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new {page = page}),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            });
        
        
    </div>
</div>

